---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: haproxy-network-ingress-backend
  template:
    metadata:
      labels:
        app: haproxy-network-ingress-backend
    spec:
      containers:
        - name: backend
          image: haproxy:2.0-alpine
          command:
            - /bin/sh
          args:
            - -c
            - "while true ; do kill -s HUP 1; echo -e \"HTTP/1.1 200 OK\n\n\" | nc -l -p 5555 ; done & haproxy -f /usr/local/etc/haproxy/haproxy.cfg"
          ports:
            - name: healthz
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
          readinessProbe:
            httpGet:
              path: /healthz
              port: healthz
          volumeMounts:
          - mountPath: /usr/local/etc/haproxy/
            name: network-ingress-configuration
            readOnly: true
        - image: quay.io/coreos/configmap-reload:v0.0.1
          args:
          - -webhook-url=http://localhost:5555/reload
          - -volume-dir=/haproxy/
          - -webhook-method=GET
          name: config-reloader
          resources:
            limits:
              cpu: 5m
              memory: 10Mi
            requests:
              cpu: 5m
              memory: 10Mi
          volumeMounts:
          - mountPath: /haproxy/
            name: network-ingress-configuration
            readOnly: true
      volumes:
      - configMap:
          defaultMode: 420
          name: network-ingress-configuration
        name: network-ingress-configuration
